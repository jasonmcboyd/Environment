# This is a basic workflow to help you get started with Actions

name: get-changed-files-count

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      subdirectory:
        required: true
        type: string
      release_prefix:
        required: true
        type: string
    secrets:
      AZURE_DEVOPS_NUGET_FEED:
        required: true
      AZURE_DEVOPS_USERNAME:
        required: true
      AZURE_DEVOPS_PAT:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main
        with:
          fetch-depth: 2

      - name: Get Files Changed Count
        id: files-changed-count
        run: echo "ChangedFileCount=$((git diff HEAD~ --name-only -- ./${{ inputs.subdirectory }} ./.github/workflows/${{ inputs.release_prefix }}.yml ./Nuspec/environment-${{ inputs.release_prefix }} | Measure-Object).Count)" >> $env:GITHUB_OUTPUT

      - name: Write Files Changed Count
        run: echo "${{ steps.files-changed-count.outputs.ChangedFileCount }}"

      - name: Get Latest Tag
        id: get-latest-tag
        uses: oprypin/find-latest-tag@v1.1.1
        with:
          repository: jasonmcboyd/Environment
          releases-only: true
          prefix: "${{ inputs.release_prefix }}-v"

      - name: Get Previous
        id: previous-release
        run: |
          echo "PreviousRelease=${{ steps.get-latest-tag.outputs.tag }}" >> $env:GITHUB_OUTPUT
          '${{ steps.get-latest-tag.outputs.tag }}' -match '${{ inputs.release_prefix }}-v(?<major>\d+)\.'
          echo "LatestReleaseMajorVersionNumber=$($Matches.major)" >> $env:GITHUB_OUTPUT

      - name: Get Chocolatey Version
        id: chocolatey-version
        run: |
          choco sources add -n environment -u ${{ secrets.AZURE_DEVOPS_USERNAME }} -p ${{ secrets.AZURE_DEVOPS_PAT }} -s ${{ secrets.AZURE_DEVOPS_NUGET_FEED }}
          echo "ChocolateyVersion=$((choco search environment-${{ inputs.release_prefix }} --source environment --limitoutput --exact).Split('|')[1])" >> $env:GITHUB_OUTPUT

      - name: Write Stuff
        run: |
          echo "${{ steps.previous-release.outputs.PreviousRelease }}"
          echo "${{ steps.previous-release.outputs.LatestReleaseMajorVersionNumber }}"
          echo "${{ steps.chocolatey.outputs.ChocolateyVersion }}"
