# This is a basic workflow to help you get started with Actions

name: get-changed-files-count

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      subdirectory:
        required: true
        type: string
      release_prefix:
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main
        with:
          fetch-depth: 2

      - name: Get Files Changed Count
        id: files-changed-count
        run: echo "ChangedFileCount=$((git diff HEAD~ --name-only -- ./${{ inputs.subdirectory }} ./.github/workflows/${{ inputs.release_prefix }}.yml ./Nuspec/environment-${{ inputs.release_prefix }} | Measure-Object).Count)" >> $env:GITHUB_OUTPUT

      - name: Write Files Changed Count
        run: echo "${{ steps.files-changed-count.outputs.ChangedFileCount }}"

      - name: Get Previous Release
        id: get-previous-release
        uses: oprypin/find-latest-tag@v1.1.1
        with:
          repository: jasonmcboyd/Environment
          releases-only: true
          prefix: "${{ inputs.release_prefix }}-v"

      - name: Write Previous Release And Major Version Number
        run: |
          echo "${{ steps.get-previous-release.outputs.tag }}"
          '${{ steps.get-previous-release.outputs.tag }}' -match '${{ inputs.release_prefix }}-v(?<major>\d+)\.'
          echo "LatestReleaseMajorVersionNumber=$($Matches.major)" >> $env:GITHUB_OUTPUT
          echo "${{ steps.get-previous-release.outputs.LatestReleaseMajorVersionNumber }}"

      - name: Get Chocolatey Version
        run: echo "ChocolateyVersion=$((choco search environment-${{ inputs.release_prefix }} --limitoutput --exact).Split('|')[1])" >> $env:GITHUB_OUTPUT

      - name: Write Stuff
        run: |
          echo "${{ steps.get-previous-release.outputs.tag }}"
          echo "${{ steps.get-previous-release.outputs.LatestReleaseMajorVersionNumber }}"
          echo "${{ steps.get-previous-release.outputs.ChocolateyVersion }}"
