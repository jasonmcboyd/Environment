# This is a basic workflow to help you get started with Actions

name: Publish Release

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      subdirectory:
        required: true
        type: string
      release-prefix:
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main
        with:
          fetch-depth: 2

      - name: Get Files Changed Count
        id: changed-files-count
        run: |
          $changedFilesCount = $((git diff HEAD~ --name-only -- ./${{ inputs.subdirectory }} ./.github/workflows/core ./.github/workflows/environment-config-jobs/${{ inputs.release-prefix }}.yml ./Publish/environment-${{ inputs.release-prefix }} | Measure-Object).Count)
          echo "changed-files-count=$changedFilesCount" >> $env:GITHUB_OUTPUT
          echo "Changed Files: $changedFilesCount"

      - name: Get Latest Release Information
        id: latest-release
        uses: ./.github/actions/get-latest-release-information
        with:
          release-prefix: ${{ inputs.release-prefix }}

      - name: Zip Files
        id: zip-files
        if: ${{ steps.changed-files-count.outputs.changed-files-count != 0 }}
        run: |
          Compress-Archive ./${{ inputs.subdirectory }}/* ./${{ inputs.release-prefix }}.zip
          echo "archive-name=${{ inputs.release-prefix }}.zip" >> $env:GITHUB_OUTPUT

      - name: Get Next Release Information
        id: get-next-release
        if: ${{ steps.changed-files-count.outputs.changed-files-count != 0 }}
        run: |
          $nextVersion ="$([int]${{ steps.latest-release.outputs.latest-release-major-version-number }} + 1).0.0"
          $nextRelease = "${{ inputs.release-prefix }}-v$nextVersion"
          echo "next-release=$nextRelease" >> $env:GITHUB_OUTPUT
          echo "Next Release: $nextRelease"

      - name: Release
        if: ${{ steps.changed-files-count.outputs.changed-files-count != 0 }}
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.zip-files.outputs.archive-name }}
          tag_name: ${{ steps.get-next-release.outputs.next-release }}
