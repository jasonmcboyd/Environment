# Action to get the latest release information for a given environment configuration.

name: get-latest-release-information
description: Get the latest release information for this environment config.

inputs:
  release-prefix:
    description: The prefix of the environment configuration.
    required: true
outputs:
  latest-release:
    description: The Git tag of the latest release.
    value: ${{ steps.latest-release.outputs.latest-release }}
  latest-release-version-number:
    description: The version of the latest release.
    value: ${{ steps.latest-release.outputs.latest-release-version-number }}
  latest-release-major-version-number:
    description: The major version number of the latest release.
    value: ${{ steps.latest-release.outputs.latest-release-major-version-number }}
  latest-release-url:
    description: The download URL of the latest release.
    value: ${{ steps.latest-release.outputs.latest-release-url }}
  latest-release-file-hash:
    description: The SHA 512 hash of the latest release version.
    value: ${{ steps.latest-release.outputs.latest-release-file-hash }}
  latest-release-directory-hash:
    description: The SHA 512 hash of all files of the latest release version.
    value: ${{ steps.latest-release.outputs.latest-release-directory-hash }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
runs:
  using: composite
  # Steps represent a sequence of tasks that will be executed as part of the job
  steps:
    - name: Get Latest Tag
      id: get-latest-tag
      uses: oprypin/find-latest-tag@v1.1.1
      with:
        repository: jasonmcboyd/Environment
        releases-only: true
        prefix: "${{ inputs.release-prefix }}-v"

    # I have to jump through a lot of hoops here to verify the hash. For some reason the hash changes after a zip has been
    # uploaded to GitHub. I think during the upload they decompress and then recompress with their algorithm of choice which
    # is different from Compress-Archive. The different algorithm results in a different zip file with a different file hash.
    - name: Get Latest Release Information
      id: latest-release
      shell: powershell
      run: |
        $latestRelease = '${{ steps.get-latest-tag.outputs.tag }}'
        $latestRelease -match '${{ inputs.release-prefix }}-v(?<major>\d+)\.' | Out-Null
        $majorVersionNumber = $Matches.major
        $versionNumber = "$majorVersionNumber.0.0"
        $latestReleaseUrl = "https://github.com/jasonmcboyd/Environment/releases/download/$latestRelease/${{ inputs.release-prefix }}.zip"
        Invoke-WebRequest -Uri $latestReleaseUrl -OutFile release-package.zip
        Expand-Archive -Path release-package.zip -DestinationPath release-package
        $combinedFileHashes = (Get-ChildItem -Path ./release-package -File -Recurse | ForEach-Object { (Get-FileHash $_.FullName).Hash }) -join ''
        echo "Combined File Hashes: $combinedFileHashes"
        $latestReleaseFileHash = (Get-FileHash release-package.zip).Hash
        $latestReleaseDirectoryHash = (Get-FileHash -InputStream ([System.IO.MemoryStream]::new([char[]]($combinedFileHashes)))).Hash
        rm ./release-package.zip
        rm ./release-package -Recurse -Force

        echo "latest-release=$latestRelease" >> $env:GITHUB_OUTPUT
        echo "latest-release-major-version-number=$majorVersionNumber" >> $env:GITHUB_OUTPUT
        echo "latest-release-version-number=$versionNumber" >> $env:GITHUB_OUTPUT
        echo "latest-release-url=$latestReleaseUrl" >> $env:GITHUB_OUTPUT
        echo "latest-release-file-hash=$latestReleaseFileHash" >> $env:GITHUB_OUTPUT
        echo "latest-release-directory-hash=$latestReleaseDirectoryHash" >> $env:GITHUB_OUTPUT

        echo "Latest Release: $latestRelease"
        echo "Latest Release Major Version Number: $majorVersionNumber"
        echo "Latest Release Version Number: $versionNumber"
        echo "Latest Release URL: $latestReleaseUrl"
        echo "Latest Release File Hash: $latestReleaseFileHash"
        echo "Latest Release Directory Hash: $latestReleaseDirectoryHash"
