# Action to get the latest release information for a given environment configuration.

name: get-latest-release-information
description: Get the latest release information for this environment config.

inputs:
  release-prefix:
    description: The prefix of the environment configuration.
    required: true
outputs:
  latest-release:
    description: The Git tag of the latest release.
    value: ${{ steps.latest-release.outputs.latest-release }}
  latest-release-version-number:
    description: The version of the latest release.
    value: ${{ steps.latest-release.outputs.latest-release-version-number }}
  latest-release-major-version-number:
    description: The major version number of the latest release.
    value: ${{ steps.latest-release.outputs.latest-release-major-version-number }}
  latest-release-url:
    description: The download URL of the latest release.
    value: ${{ steps.latest-release.outputs.latest-release-url }}
  latest-release-directory-hash:
    description: The SHA 512 hash of the latest release version.
    value: ${{ steps.latest-release.outputs.latest-release-directory-hash }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
runs:
  using: composite
  # Steps represent a sequence of tasks that will be executed as part of the job
  steps:
    - name: Get Latest Tag
      id: get-latest-tag
      uses: oprypin/find-latest-tag@v1.1.1
      with:
        repository: jasonmcboyd/Environment
        releases-only: true
        prefix: "${{ inputs.release-prefix }}-v"

    - name: Get Latest Release Information
      id: latest-release
      shell: powershell
      run: |
        $latestRelease = '${{ steps.get-latest-tag.outputs.tag }}'
        $latestRelease -match '${{ inputs.release-prefix }}-v(?<major>\d+)\.' | Out-Null
        $majorVersionNumber = $Matches.major
        $versionNumber = "$majorVersionNumber.0.0"
        $latestReleaseUrl = "https://github.com/jasonmcboyd/Environment/releases/download/$latestRelease/${{ inputs.release-prefix }}.zip"
        Invoke-WebRequest -Uri $latestReleaseUrl -OutFile release-package.zip
        Expand-Archive -Path release-package.zip -DestinationPath release-package
        $latestReleaseDirectoryHash = (Get-FileHash -InputStream ([System.IO.MemoryStream]::new([char[]]((Get-ChildItem -Path ./release-package -File | % { (Get-FileHash $_).Hash }) -join '')))).Hash
        rm ./release-package.zip
        rm ./release-package -Recurse -Force
        echo "latest-release=$latestRelease" >> $env:GITHUB_OUTPUT
        echo "latest-release-major-version-number=$majorVersionNumber" >> $env:GITHUB_OUTPUT
        echo "latest-release-version-number=$versionNumber" >> $env:GITHUB_OUTPUT
        echo "latest-release-url=$latestReleaseUrl" >> $env:GITHUB_OUTPUT
        echo "latest-release-directory-hash=$latestReleaseDirectoryHash" >> $env:GITHUB_OUTPUT
        echo "Latest Release: $latestRelease"
        echo "Latest Release Major Version Number: $majorVersionNumber"
        echo "Latest Release Version Number: $versionNumber"
        echo "Latest Release URL: $latestReleaseUrl"
        echo "Latest Release Directory Hash: $latestReleaseDirectoryHash"
